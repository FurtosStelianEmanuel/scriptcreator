/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import refs.ComponentResizer;
import tools.Predicate;

/**
 *
 * @author Manel
 */
public class NewActionForm extends javax.swing.JFrame {

    /**
     * Creates new form NewActionForm
     */
    public NewActionForm() {
        initComponents();
        folderCreationRawText.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        folderCreationTab = new javax.swing.JPanel();
        folderCreationFolderRootName = new refs.PlaceholderTextField();
        jLabel2 = new javax.swing.JLabel();
        folderCreationFolderNameChoice = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        folderCreationMemoryLocation = new javax.swing.JComboBox<>();
        folderCreationRawText = new refs.PlaceholderTextField();
        mouseMoveTab = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        mouseMoveX = new refs.PlaceholderTextField();
        mouseMoveY = new refs.PlaceholderTextField();
        mouseMoveEdit = new javax.swing.JButton();
        mouseClickTab = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        mouseClickLeft = new javax.swing.JRadioButton();
        mouseClickMiddle = new javax.swing.JRadioButton();
        mouseClickRight = new javax.swing.JRadioButton();
        sentenceTab = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        typeSentenceRawSentence = new refs.PlaceholderTextField();
        jLabel8 = new javax.swing.JLabel();
        typeSentenceChoice = new javax.swing.JComboBox<>();
        typeSentenceExecutorMemory = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        mouseWheelTab = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        mouseWheelDirection = new javax.swing.JComboBox<>();
        mouseWheelAmount = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        takeOcrScreenshotTab = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        takeOcrScreenshotX = new refs.PlaceholderTextField();
        takeOcrScreenshotY = new refs.PlaceholderTextField();
        takeOcrScreenshotWidth = new refs.PlaceholderTextField();
        takeOcrScreenshotHeight = new refs.PlaceholderTextField();
        takeOcrScreenshotEdit = new javax.swing.JButton();
        oradentClickPictogramesTab = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        setupCustomClickPictogrames = new javax.swing.JButton();
        oradentPacientIndexerTab = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        customOradentNameMemory = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        customOradentBirthDateMemory = new javax.swing.JComboBox<>();
        customOradentSexMemory = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        doneButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(318, 318));

        jComboBox1.setFocusable(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Predicate");

        folderCreationTab.setVisible(false);

        folderCreationFolderRootName.setPlaceholder("Root folder ex E:\\ScriptData");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Folder creation maps");

        folderCreationFolderNameChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Extract from executor memory", "Raw value" }));
        folderCreationFolderNameChoice.setFocusable(false);
        folderCreationFolderNameChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folderCreationFolderNameChoiceActionPerformed(evt);
            }
        });

        jLabel3.setText("Folder name");

        jLabel4.setText("Executor memory");

        folderCreationMemoryLocation.setFocusable(false);

        folderCreationRawText.setPlaceholder("Raw folder name");

        javax.swing.GroupLayout folderCreationTabLayout = new javax.swing.GroupLayout(folderCreationTab);
        folderCreationTab.setLayout(folderCreationTabLayout);
        folderCreationTabLayout.setHorizontalGroup(
            folderCreationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, folderCreationTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(folderCreationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(folderCreationFolderRootName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, folderCreationTabLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(folderCreationFolderNameChoice, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, folderCreationTabLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(folderCreationMemoryLocation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(folderCreationRawText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        folderCreationTabLayout.setVerticalGroup(
            folderCreationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(folderCreationTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(2, 2, 2)
                .addComponent(folderCreationFolderRootName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(folderCreationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(folderCreationFolderNameChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(folderCreationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(folderCreationMemoryLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(folderCreationRawText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mouseMoveTab.setVisible(false);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("MouseMove maps");

        mouseMoveX.setPlaceholder("X");

        mouseMoveY.setPlaceholder("Y");

        mouseMoveEdit.setText("Edit");
        mouseMoveEdit.setFocusable(false);
        mouseMoveEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mouseMoveEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mouseMoveTabLayout = new javax.swing.GroupLayout(mouseMoveTab);
        mouseMoveTab.setLayout(mouseMoveTabLayout);
        mouseMoveTabLayout.setHorizontalGroup(
            mouseMoveTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mouseMoveTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mouseMoveTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mouseMoveTabLayout.createSequentialGroup()
                        .addGroup(mouseMoveTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mouseMoveEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mouseMoveTabLayout.createSequentialGroup()
                                .addComponent(mouseMoveX, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(mouseMoveY, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        mouseMoveTabLayout.setVerticalGroup(
            mouseMoveTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mouseMoveTabLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mouseMoveTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mouseMoveX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mouseMoveY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mouseMoveEdit)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mouseClickTab.setVisible(false);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("MouseClick maps");

        mouseClickLeft.setText("Left");
        mouseClickLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mouseClickLeftActionPerformed(evt);
            }
        });

        mouseClickMiddle.setText("Middle");
        mouseClickMiddle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mouseClickMiddleActionPerformed(evt);
            }
        });

        mouseClickRight.setText("Right");
        mouseClickRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mouseClickRightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mouseClickTabLayout = new javax.swing.GroupLayout(mouseClickTab);
        mouseClickTab.setLayout(mouseClickTabLayout);
        mouseClickTabLayout.setHorizontalGroup(
            mouseClickTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mouseClickTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mouseClickTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mouseClickTabLayout.createSequentialGroup()
                        .addComponent(mouseClickLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(12, 12, 12)
                        .addComponent(mouseClickMiddle, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mouseClickRight, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        mouseClickTabLayout.setVerticalGroup(
            mouseClickTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mouseClickTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mouseClickTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mouseClickLeft)
                    .addComponent(mouseClickMiddle)
                    .addComponent(mouseClickRight))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sentenceTab.setVisible(false);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("TypeSentence maps");

        typeSentenceRawSentence.setPlaceholder("Sentence to type");
        typeSentenceRawSentence.setVisible(false);

        jLabel8.setText("Sentence");

        typeSentenceChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Extract from executor memory", "Raw value" }));
        typeSentenceChoice.setFocusable(false);
        typeSentenceChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeSentenceChoiceActionPerformed(evt);
            }
        });

        typeSentenceExecutorMemory.setFocusable(false);

        jLabel9.setText("Executor memory");

        javax.swing.GroupLayout sentenceTabLayout = new javax.swing.GroupLayout(sentenceTab);
        sentenceTab.setLayout(sentenceTabLayout);
        sentenceTabLayout.setHorizontalGroup(
            sentenceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sentenceTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sentenceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(typeSentenceRawSentence, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(sentenceTabLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(typeSentenceExecutorMemory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(sentenceTabLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(typeSentenceChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        sentenceTabLayout.setVerticalGroup(
            sentenceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sentenceTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sentenceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeSentenceChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sentenceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(typeSentenceExecutorMemory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(typeSentenceRawSentence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mouseWheelTab.setVisible(false);

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("MouseWheel maps");

        jLabel14.setText("Direction");

        mouseWheelDirection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Up", "Down" }));

        mouseWheelAmount.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        jLabel15.setText("Amount");

        javax.swing.GroupLayout mouseWheelTabLayout = new javax.swing.GroupLayout(mouseWheelTab);
        mouseWheelTab.setLayout(mouseWheelTabLayout);
        mouseWheelTabLayout.setHorizontalGroup(
            mouseWheelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mouseWheelTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mouseWheelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mouseWheelTabLayout.createSequentialGroup()
                        .addGroup(mouseWheelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mouseWheelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mouseWheelDirection, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mouseWheelAmount))
                        .addContainerGap())))
        );
        mouseWheelTabLayout.setVerticalGroup(
            mouseWheelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mouseWheelTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mouseWheelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(mouseWheelDirection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mouseWheelTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mouseWheelAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("TakeOcrScreenshot maps");

        takeOcrScreenshotX.setPlaceholder("X");

        takeOcrScreenshotY.setPlaceholder("Y");

        takeOcrScreenshotWidth.setPlaceholder("Width");

        takeOcrScreenshotHeight.setPlaceholder("Height");

        takeOcrScreenshotEdit.setText("Edit");
        takeOcrScreenshotEdit.setFocusable(false);
        takeOcrScreenshotEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeOcrScreenshotEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout takeOcrScreenshotTabLayout = new javax.swing.GroupLayout(takeOcrScreenshotTab);
        takeOcrScreenshotTab.setLayout(takeOcrScreenshotTabLayout);
        takeOcrScreenshotTabLayout.setHorizontalGroup(
            takeOcrScreenshotTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(takeOcrScreenshotTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(takeOcrScreenshotTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(takeOcrScreenshotTabLayout.createSequentialGroup()
                        .addGroup(takeOcrScreenshotTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(takeOcrScreenshotX, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(takeOcrScreenshotWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(takeOcrScreenshotTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(takeOcrScreenshotY, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(takeOcrScreenshotHeight, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(takeOcrScreenshotEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        takeOcrScreenshotTabLayout.setVerticalGroup(
            takeOcrScreenshotTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(takeOcrScreenshotTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(takeOcrScreenshotTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(takeOcrScreenshotX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(takeOcrScreenshotY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(takeOcrScreenshotTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(takeOcrScreenshotWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(takeOcrScreenshotHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(takeOcrScreenshotEdit)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("CustomOradentClickPictogrames");

        setupCustomClickPictogrames.setText("Setup");
        setupCustomClickPictogrames.setFocusable(false);
        setupCustomClickPictogrames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setupCustomClickPictogramesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout oradentClickPictogramesTabLayout = new javax.swing.GroupLayout(oradentClickPictogramesTab);
        oradentClickPictogramesTab.setLayout(oradentClickPictogramesTabLayout);
        oradentClickPictogramesTabLayout.setHorizontalGroup(
            oradentClickPictogramesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oradentClickPictogramesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(oradentClickPictogramesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(setupCustomClickPictogrames, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        oradentClickPictogramesTabLayout.setVerticalGroup(
            oradentClickPictogramesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oradentClickPictogramesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(setupCustomClickPictogrames)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("CustomOradentAddPacientToIndexer");

        jLabel10.setText("Name");

        customOradentNameMemory.setFocusable(false);

        jLabel11.setText("BirthDate");

        customOradentBirthDateMemory.setFocusable(false);

        customOradentSexMemory.setFocusable(false);

        jLabel12.setText("Sex");

        jLabel19.setText("Path: --calculated from pacient name");

        jLabel20.setText("Images: --calculated from the");

        jLabel21.setText("CustomOradentClickPictogrames action");

        javax.swing.GroupLayout oradentPacientIndexerTabLayout = new javax.swing.GroupLayout(oradentPacientIndexerTab);
        oradentPacientIndexerTab.setLayout(oradentPacientIndexerTabLayout);
        oradentPacientIndexerTabLayout.setHorizontalGroup(
            oradentPacientIndexerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oradentPacientIndexerTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(oradentPacientIndexerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, oradentPacientIndexerTabLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customOradentNameMemory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(oradentPacientIndexerTabLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customOradentBirthDateMemory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(oradentPacientIndexerTabLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customOradentSexMemory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(oradentPacientIndexerTabLayout.createSequentialGroup()
                        .addGroup(oradentPacientIndexerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        oradentPacientIndexerTabLayout.setVerticalGroup(
            oradentPacientIndexerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oradentPacientIndexerTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(oradentPacientIndexerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(customOradentNameMemory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(oradentPacientIndexerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(customOradentBirthDateMemory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(oradentPacientIndexerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(customOradentSexMemory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        doneButton.setText("Done");
        doneButton.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(folderCreationTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mouseMoveTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mouseClickTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sentenceTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mouseWheelTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(takeOcrScreenshotTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(oradentClickPictogramesTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel1)
                                .addGap(6, 6, 6)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(doneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(oradentPacientIndexerTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1))
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(folderCreationTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(mouseMoveTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(mouseClickTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(sentenceTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(mouseWheelTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(takeOcrScreenshotTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(oradentClickPictogramesTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oradentPacientIndexerTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doneButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void populateMemoryLocations(Map<String, UUID> memoryLocationNames) {
        for (String key : memoryLocationNames.keySet()) {
            typeSentenceExecutorMemory.addItem(key);
            folderCreationMemoryLocation.addItem(key);

            customOradentSexMemory.addItem(key);
            customOradentNameMemory.addItem(key);
            customOradentBirthDateMemory.addItem(key);
        }
    }

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        showTabForPredicate(Predicate.valueOf((String) jComboBox1.getSelectedItem()));
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void setupCustomClickPictogramesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setupCustomClickPictogramesActionPerformed
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    JOptionPane.showMessageDialog(null, "Select the first image");
                    customOradentStartImage = getSelectedRectangle();

                    JOptionPane.showMessageDialog(null, "Select the date of the first image");
                    customOradentDate = getSelectedRectangle();

                    JOptionPane.showMessageDialog(null, "Select the horizontal space between images");
                    customOradentSeparationHorizontal = getSelectedRectangle();

                    JOptionPane.showMessageDialog(null, "Select the last image in the first row (for multiline checking)");
                    customOradentLastImage = getSelectedRectangle();

                    JOptionPane.showMessageDialog(null, "Select the vertical spacing between images (for multiline checking)");
                    customOradentSeparationVertical = getSelectedRectangle();

                    if (customOradentStartImage == null
                            || customOradentDate == null
                            || customOradentLastImage == null
                            || customOradentSeparationHorizontal == null
                            || customOradentSeparationVertical == null) {
                        System.err.println("Valori de intrare nule in customclickpictogrames setup");
                    } else {

                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(NewActionForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }).start();
    }//GEN-LAST:event_setupCustomClickPictogramesActionPerformed

    private void takeOcrScreenshotEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeOcrScreenshotEditActionPerformed
        JFrame f = new JFrame();
        f.setCursor(new Cursor(Cursor.MOVE_CURSOR));
        f.setType(Type.POPUP);
        f.setUndecorated(true);
        f.setSize(new Dimension(250, 100));
        f.setLocationRelativeTo(null);
        f.setOpacity(0.5f);
        f.getContentPane().setBackground(Color.yellow);
        f.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                JFrame f = (JFrame) e.getSource();
                offX = e.getX();
                offY = e.getY();
                sizeOnPress = f.getSize();
            }

            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    f.dispose();
                    takeOcrScreenshotX.setText(Integer.toString(f.getX()));
                    takeOcrScreenshotY.setText(Integer.toString(f.getY()));
                    takeOcrScreenshotWidth.setText(Integer.toString(f.getWidth()));
                    takeOcrScreenshotHeight.setText(Integer.toString(f.getHeight()));
                }
            }
        });
        f.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                JFrame f = (JFrame) e.getSource();
                if (sizeOnPress.equals(f.getSize())) {
                    f.setLocation(f.getX() + e.getX() - offX, f.getY() + e.getY() - offY);
                }
            }
        });
        f.setVisible(true);

        ComponentResizer resizer = new ComponentResizer();
        resizer.registerComponent(f);
    }//GEN-LAST:event_takeOcrScreenshotEditActionPerformed

    private void typeSentenceChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeSentenceChoiceActionPerformed
        JComboBox source = (JComboBox) evt.getSource();
        switch (source.getSelectedIndex()) {
            case 0:
                typeSentenceExecutorMemory.setVisible(true);
                jLabel9.setVisible(true);
                typeSentenceRawSentence.setVisible(false);
                break;
            case 1:
                typeSentenceExecutorMemory.setVisible(false);
                jLabel9.setVisible(false);
                typeSentenceRawSentence.setVisible(true);
                break;
        }
    }//GEN-LAST:event_typeSentenceChoiceActionPerformed

    private void mouseClickRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mouseClickRightActionPerformed
        if (mouseClickRight.isSelected()) {
            mouseClickLeft.setSelected(false);
            mouseClickMiddle.setSelected(false);
        }
    }//GEN-LAST:event_mouseClickRightActionPerformed

    private void mouseClickMiddleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mouseClickMiddleActionPerformed
        if (mouseClickMiddle.isSelected()) {
            mouseClickLeft.setSelected(false);
            mouseClickRight.setSelected(false);
        }
    }//GEN-LAST:event_mouseClickMiddleActionPerformed

    private void mouseClickLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mouseClickLeftActionPerformed
        if (mouseClickLeft.isSelected()) {
            mouseClickRight.setSelected(false);
            mouseClickMiddle.setSelected(false);
        }
    }//GEN-LAST:event_mouseClickLeftActionPerformed

    private void mouseMoveEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mouseMoveEditActionPerformed
        class MyPanel extends JPanel {

            int targetSize = 10;

            @Override
            public void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.setColor(Color.GREEN);
                g.fillRect(0, 0, getWidth(), getHeight());

                g.setColor(Color.BLACK);
                g.drawLine(0, getHeight() / 2, getWidth(), getHeight() / 2);
                g.drawLine(getWidth() / 2, 0, getWidth() / 2, getHeight());
                g.setColor(Color.RED);
                g.fillOval(getWidth() / 2 - targetSize / 2, getHeight() / 2 - targetSize / 2, targetSize, targetSize);
            }
        }
        JFrame f = new JFrame();
        f.setCursor(new Cursor(Cursor.MOVE_CURSOR));
        f.setType(Type.POPUP);
        f.setUndecorated(true);
        f.setSize(new Dimension(25, 25));
        f.setLocationRelativeTo(null);
        f.setOpacity(0.5f);
        f.setAlwaysOnTop(true);
        f.add(new MyPanel());
        f.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                JFrame f = (JFrame) e.getSource();
                offX = e.getX();
                offY = e.getY();
                sizeOnPress = f.getSize();
            }

            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    f.dispose();
                    mouseMoveX.setText(Integer.toString(f.getX() + f.getWidth() / 2));
                    mouseMoveY.setText(Integer.toString(f.getY() + f.getHeight() / 2));
                }
            }
        });
        f.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                JFrame f = (JFrame) e.getSource();
                if (sizeOnPress.equals(f.getSize())) {
                    f.setLocation(f.getX() + e.getX() - offX, f.getY() + e.getY() - offY);
                }
            }
        });
        f.setVisible(true);

        ComponentResizer resizer = new ComponentResizer();
        resizer.registerComponent(f);
    }//GEN-LAST:event_mouseMoveEditActionPerformed

    private void folderCreationFolderNameChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folderCreationFolderNameChoiceActionPerformed
        JComboBox source = (JComboBox) evt.getSource();
        switch (source.getSelectedIndex()) {
            case 0:
                folderCreationMemoryLocation.setVisible(true);
                jLabel4.setVisible(true);
                folderCreationRawText.setVisible(false);
                break;
            case 1:
                folderCreationMemoryLocation.setVisible(false);
                jLabel4.setVisible(false);
                folderCreationRawText.setVisible(true);
                break;
        }
    }//GEN-LAST:event_folderCreationFolderNameChoiceActionPerformed

    int offX = 0, offY;
    Dimension sizeOnPress = new Dimension(0, 0);

    private Rectangle getSelectedRectangle() throws InterruptedException {

        final Rectangle monitor = new Rectangle();
        JFrame f = new JFrame();
        f.setCursor(new Cursor(Cursor.MOVE_CURSOR));
        f.setType(Type.POPUP);
        f.setUndecorated(true);
        f.setSize(new Dimension(250, 100));
        f.setLocationRelativeTo(null);
        f.setOpacity(0.5f);
        f.getContentPane().setBackground(Color.yellow);
        f.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                JFrame f = (JFrame) e.getSource();
                offX = e.getX();
                offY = e.getY();
                sizeOnPress = f.getSize();
            }

            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    f.dispose();
                    synchronized (monitor) {
                        monitor.setSize(new Dimension(f.getWidth(), f.getHeight()));
                        monitor.setLocation(new Point(f.getX(), f.getY()));
                        monitor.notify();
                    }
                }
            }
        });
        f.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                JFrame f = (JFrame) e.getSource();
                if (sizeOnPress.equals(f.getSize())) {
                    f.setLocation(f.getX() + e.getX() - offX, f.getY() + e.getY() - offY);
                }
            }
        });
        f.addKeyListener(new KeyAdapter() {
            List<Integer> pressedKeys = new ArrayList<>();

            @Override
            public void keyPressed(KeyEvent e) {
                if (!pressedKeys.contains(e.getKeyCode())) {
                    pressedKeys.add(e.getKeyCode());
                }
                if (pressedKeys.contains(KeyEvent.VK_ALT)) {
                    int width = f.getWidth(), height = f.getHeight();
                    switch (e.getKeyCode()) {
                        case KeyEvent.VK_UP:
                            height--;
                            break;
                        case KeyEvent.VK_DOWN:
                            height++;
                            break;
                        case KeyEvent.VK_RIGHT:
                            width++;
                            break;
                        case KeyEvent.VK_LEFT:
                            width--;
                            break;
                    }
                    f.setSize(width, height);
                } else {
                    int x = f.getX(), y = f.getY();
                    switch (e.getKeyCode()) {
                        case KeyEvent.VK_UP:
                            y--;
                            break;
                        case KeyEvent.VK_DOWN:
                            y++;
                            break;
                        case KeyEvent.VK_RIGHT:
                            x++;
                            break;
                        case KeyEvent.VK_LEFT:
                            x--;
                            break;
                    }
                    f.setLocation(x, y);
                    switch (e.getKeyCode()) {
                        case KeyEvent.VK_ENTER: {
                            f.dispose();
                            synchronized (monitor) {
                                monitor.setSize(new Dimension(f.getWidth(), f.getHeight()));
                                monitor.setLocation(new Point(f.getX(), f.getY()));
                                monitor.notify();
                            }
                            break;
                        }
                    }
                }
            }

            @Override
            public void keyReleased(KeyEvent e) {
                if (pressedKeys.contains(e.getKeyCode())) {
                    pressedKeys.remove(pressedKeys.indexOf(e.getKeyCode()));
                }
            }
        });
        f.setVisible(true);
        ComponentResizer resizer = new ComponentResizer();
        resizer.registerComponent(f);
        synchronized (monitor) {
            monitor.wait();
            return monitor;
        }
    }
    public Rectangle customOradentStartImage;
    public Rectangle customOradentLastImage;
    public Rectangle customOradentDate;
    public Rectangle customOradentSeparationHorizontal;
    public Rectangle customOradentSeparationVertical;

    public void showTabForPredicate(Predicate predicate) {
        folderCreationTab.setVisible(false);
        mouseClickTab.setVisible(false);
        mouseMoveTab.setVisible(false);
        mouseWheelTab.setVisible(false);
        takeOcrScreenshotTab.setVisible(false);
        sentenceTab.setVisible(false);
        oradentClickPictogramesTab.setVisible(false);
        oradentPacientIndexerTab.setVisible(false);

        switch (predicate) {
            case CreateFolder:
                folderCreationTab.setVisible(true);
                break;
            case MouseClick:
                mouseClickTab.setVisible(true);
                break;
            case MouseMove:
                mouseMoveTab.setVisible(true);
                break;
            case MouseWheel:
                mouseWheelTab.setVisible(true);
                break;
            case TakeOcrScreenshot:
                takeOcrScreenshotTab.setVisible(true);
                break;
            case TypeSentence:
                sentenceTab.setVisible(true);
                break;
            case CustomOradentClickPictogrames:
                oradentClickPictogramesTab.setVisible(true);
                break;
            case CustomOradentAddPacientToIndexer:
                oradentPacientIndexerTab.setVisible(true);
                break;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> customOradentBirthDateMemory;
    public javax.swing.JComboBox<String> customOradentNameMemory;
    public javax.swing.JComboBox<String> customOradentSexMemory;
    public javax.swing.JButton doneButton;
    public javax.swing.JComboBox<String> folderCreationFolderNameChoice;
    public refs.PlaceholderTextField folderCreationFolderRootName;
    public javax.swing.JComboBox<String> folderCreationMemoryLocation;
    public refs.PlaceholderTextField folderCreationRawText;
    public javax.swing.JPanel folderCreationTab;
    public javax.swing.JComboBox<String> jComboBox1;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel10;
    public javax.swing.JLabel jLabel11;
    public javax.swing.JLabel jLabel12;
    public javax.swing.JLabel jLabel13;
    public javax.swing.JLabel jLabel14;
    public javax.swing.JLabel jLabel15;
    public javax.swing.JLabel jLabel16;
    public javax.swing.JLabel jLabel17;
    public javax.swing.JLabel jLabel18;
    public javax.swing.JLabel jLabel19;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel20;
    public javax.swing.JLabel jLabel21;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JRadioButton mouseClickLeft;
    public javax.swing.JRadioButton mouseClickMiddle;
    public javax.swing.JRadioButton mouseClickRight;
    public javax.swing.JPanel mouseClickTab;
    public javax.swing.JButton mouseMoveEdit;
    public javax.swing.JPanel mouseMoveTab;
    public refs.PlaceholderTextField mouseMoveX;
    public refs.PlaceholderTextField mouseMoveY;
    public javax.swing.JSpinner mouseWheelAmount;
    public javax.swing.JComboBox<String> mouseWheelDirection;
    public javax.swing.JPanel mouseWheelTab;
    public javax.swing.JPanel oradentClickPictogramesTab;
    public javax.swing.JPanel oradentPacientIndexerTab;
    public javax.swing.JPanel sentenceTab;
    public javax.swing.JButton setupCustomClickPictogrames;
    public javax.swing.JButton takeOcrScreenshotEdit;
    public refs.PlaceholderTextField takeOcrScreenshotHeight;
    public javax.swing.JPanel takeOcrScreenshotTab;
    public refs.PlaceholderTextField takeOcrScreenshotWidth;
    public refs.PlaceholderTextField takeOcrScreenshotX;
    public refs.PlaceholderTextField takeOcrScreenshotY;
    public javax.swing.JComboBox<String> typeSentenceChoice;
    public javax.swing.JComboBox<String> typeSentenceExecutorMemory;
    public refs.PlaceholderTextField typeSentenceRawSentence;
    // End of variables declaration//GEN-END:variables
}
